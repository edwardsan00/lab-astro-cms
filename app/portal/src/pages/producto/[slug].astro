---
import Layout from '../../layouts/Layout.astro';
import { getProductBySlug, productSlugExists, getRelatedProducts } from '../../services/products';
import { getCategoryBySlug } from '../../services/categories';
import { Rating } from '@ecommerce/ui';
import ProductGrid from '../../components/ProductGrid.astro';
import { formatPrice, calculateDiscountPercentage } from '../../utils';

export async function getStaticPaths() {
  // This would normally fetch all product slugs from the database
  // For this example, we'll return a few hard-coded slugs
  return [
    { params: { slug: 'camiseta-basica-algodon' } },
    { params: { slug: 'chaqueta-cuero-negra' } },
    { params: { slug: 'zapatos-deportivos-running' } },
  ];
}

const { slug } = Astro.params;

// Check if this is a valid product
if (!slug || !productSlugExists(slug)) {
  return Astro.redirect('/404');
}

// Get product details
const product = getProductBySlug(slug);
const category = product?.categorySlug ? getCategoryBySlug(product.categorySlug) : null;
const relatedProducts = getRelatedProducts(slug);

// Calculate discount percentage if original price exists
const discountPercentage = product?.originalPrice ? 
  calculateDiscountPercentage(product.originalPrice, product.price) : 0;
---

<Layout 
  title={`${product?.name || 'Producto'} | AstroShop`} 
  description={product?.description || 'Detalles del producto'}
>
  <div class="container mx-auto px-4 py-8">
    <div class="mb-4 flex items-center text-sm text-gray-500">
      <a href="/" class="hover:text-blue-600">Inicio</a>
      <span class="mx-2">/</span>
      {category && (
        <>
          <a href={`/${category.slug}`} class="hover:text-blue-600">{category.name}</a>
          <span class="mx-2">/</span>
        </>
      )}
      <span class="text-gray-800">{product?.name}</span>
    </div>

    <div class="mb-16 grid grid-cols-1 gap-8 md:grid-cols-2">
      <div class="relative">
        <img 
          src={product?.images && product.images.length > 0 ? product.images[0] : 'https://via.placeholder.com/600'} 
          alt={product?.name} 
          class="w-full rounded-lg"
        />
        {product?.isNew && (
          <div class="absolute left-4 top-4 rounded-full bg-blue-600 px-3 py-1 text-sm font-medium text-white">
            Nuevo
          </div>
        )}
        {product?.isSale && (
          <div class="absolute right-4 top-4 rounded-full bg-red-500 px-3 py-1 text-sm font-medium text-white">
            Oferta
          </div>
        )}
      </div>

      <div>
        <h1 class="mb-2 text-3xl font-bold text-gray-900">{product?.name}</h1>
        
        <div class="mb-4 flex items-center space-x-2">
          {product?.rating && (
            <>
              <Rating value={product.rating} client:load />
              <span class="text-sm text-gray-600">({product.rating}/5)</span>
            </>
          )}
        </div>

        <div class="mb-6">
          {product?.originalPrice ? (
            <div class="flex items-center">
              <span class="text-3xl font-bold text-gray-900">{formatPrice(product.price)}</span>
              <span class="ml-3 text-lg text-gray-500 line-through">{formatPrice(product.originalPrice)}</span>
              <span class="ml-3 rounded-md bg-red-100 px-2 py-1 text-sm font-medium text-red-800">
                {discountPercentage}% de descuento
              </span>
            </div>
          ) : (
            <span class="text-3xl font-bold text-gray-900">{product && formatPrice(product.price)}</span>
          )}
        </div>

        <div class="mb-6 border-t border-b border-gray-200 py-4">
          <p class="text-gray-700">
            {product?.description}
          </p>
        </div>

        <div class="mb-6">
          <h3 class="mb-2 text-lg font-medium text-gray-900">Tallas disponibles</h3>
          <div class="flex flex-wrap gap-2">
            {product?.sizes ? (
              product.sizes.map(size => (
                <button class="rounded-md border border-gray-300 px-4 py-2 text-sm font-medium hover:border-blue-500 hover:text-blue-500">
                  {size}
                </button>
              ))
            ) : (
              ['XS', 'S', 'M', 'L', 'XL'].map(size => (
                <button class="rounded-md border border-gray-300 px-4 py-2 text-sm font-medium hover:border-blue-500 hover:text-blue-500">
                  {size}
                </button>
              ))
            )}
          </div>
        </div>

        <div class="mb-6">
          <h3 class="mb-2 text-lg font-medium text-gray-900">Colores</h3>
          <div class="flex space-x-3">
            {product?.colors ? (
              product.colors.map(color => (
                <button class={`h-8 w-8 rounded-full ring-offset-2 hover:ring-2 hover:ring-blue-500`} style={{backgroundColor: color}}></button>
              ))
            ) : (
              ['bg-black', 'bg-blue-600', 'bg-red-500', 'bg-green-600', 'bg-gray-300'].map(color => (
                <button class={`h-8 w-8 rounded-full ${color} ring-offset-2 hover:ring-2 hover:ring-blue-500`}></button>
              ))
            )}
          </div>
        </div>

        <div class="flex space-x-4">
          <button class="flex-1 rounded-md bg-blue-600 px-8 py-3 font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
            Añadir al carrito
          </button>
          <button class="rounded-md border border-gray-300 bg-white p-3 text-gray-700 hover:bg-gray-50 hover:text-blue-600">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
            </svg>
          </button>
        </div>
      </div>
    </div>

    {relatedProducts.length > 0 && (
      <section class="mb-16">
        <h2 class="mb-6 text-2xl font-bold text-gray-900">Productos relacionados</h2>
        <ProductGrid products={relatedProducts} columns={4} />
      </section>
    )}

    <section class="mb-16">
      <div class="mb-8">
        <h2 class="mb-4 text-2xl font-bold text-gray-900">Detalles del producto</h2>
        <div class="rounded-md border border-gray-200 bg-white p-6">
          <div class="grid gap-4 sm:grid-cols-2">
            <div>
              <h3 class="mb-2 font-medium text-gray-900">Características</h3>
              <ul class="space-y-2 text-gray-700">
                <li>• Material de alta calidad</li>
                <li>• Diseño moderno y elegante</li>
                <li>• Diferentes tallas disponibles</li>
                <li>• Múltiples colores a elegir</li>
                <li>• Fabricado con estándares éticos</li>
              </ul>
            </div>
            <div>
              <h3 class="mb-2 font-medium text-gray-900">Cuidados</h3>
              <ul class="space-y-2 text-gray-700">
                <li>• Lavar a máquina a 30°C</li>
                <li>• No usar lejía</li>
                <li>• Planchar a temperatura media</li>
                <li>• No limpiar en seco</li>
                <li>• Secar en posición horizontal</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout> 